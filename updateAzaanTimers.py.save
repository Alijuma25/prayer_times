
#!/usr/bin/env python3

import datetime
from  datetime import timedelta
import time
import sys
from os.path import dirname, abspath, join as pathjoin
import argparse


from praytimes import PrayTimes
PT = PrayTimes() 


#HELPER FUNCTIONS
#---------------------------------
#---------------------------------
#Function to add azaan time to cron
def parseArgs():
    parser = argparse.ArgumentParser(description='Calculate prayer times and install cronjobs to play Adhan')
    parser.add_argument('--lat', type=float, dest='lat',
                        help='Latitude of the location, for example 30.345621')
    parser.add_argument('--lng', type=float, dest='lng',
                        help='Longitude of the location, for example 60.512126')
    parser.add_argument('--method', choices=['MWL', 'ISNA', 'Egypt', 'Makkah', 'Karachi', 'Tehran', 'Jafari'],
                        dest='method',
                        help='Method of calculation')
    parser.add_argument('--fajr-azaan-volume', type=int, dest='fajr_azaan_vol',
                        help='Volume for fajr azaan in millibels, 1500 is loud and -30000 is quiet (default 0)')
    parser.add_argument('--azaan-volume', type=int, dest='azaan_vol',
                        help='Volume for azaan (other than fajr) in millibels, 1500 is loud and -30000 is quiet (default 0)')
    return parser

def mergeArgs(args):
    file_path = pathjoin('/usr/local/bin/.settings')
    # load values
    lat = lng = method = fajr_azaan_vol = azaan_vol = None
    try:
        with open(file_path, 'rt') as f:
            lat, lng, method, fajr_azaan_vol, azaan_vol = f.readlines()[0].split(',')
    except:
        print('No .settings file found')
    # merge args
    if args.lat:
        lat = args.lat
    if lat:
        lat = float(lat)
    if args.lng:
        lng = args.lng
    if lng:
        lng = float(lng)
    if args.method:
        method = args.method
    if args.fajr_azaan_vol:
        fajr_azaan_vol = args.fajr_azaan_vol
    if fajr_azaan_vol:
        fajr_azaan_vol = int(fajr_azaan_vol)
    if args.azaan_vol:
        azaan_vol = args.azaan_vol
    if azaan_vol:
        azaan_vol = int(azaan_vol)
    # save values
    with open(file_path, 'wt') as f:
        f.write('{},{},{},{},{}'.format(lat or '', lng or '', method or '',
                fajr_azaan_vol or 0, azaan_vol or 0))
    return lat or None, lng or None, method or None, fajr_azaan_vol or 0, azaan_vol or 0 

def addAzaanTime (strFajr, strZohr, strMaghrib, strFajrTime,strZohrTime, strMaghribTime,strUpdate):
  fs = open('/etc/cron.d/cronAdhaan', 'w')
  timeArr = strFajrTime.split(':')
  hour = timeArr[0]
  min = timeArr[1]
  jobStrFajr = min + ' ' + hour + ' * * * ' + ' root sh /usr/local/bin/playAzaan.sh ' + '#' + strFajr + '\n'
  timeArr = strZohrTime.split(':')
  hour = timeArr[0]
  min = timeArr[1]
  jobStrZohr = min + ' ' + hour + ' * * * ' + ' root sh /usr/local/bin/playAzaan.sh ' + '#' + strZohr + '\n'
  timeArr = strMaghribTime.split(':')
  hour = timeArr[0]
  min = timeArr[1]
  jobStrMaghrib = min + ' ' + hour + ' * * * ' + ' root sh /usr/local/bin/playAzaan.sh ' + '#' + strMaghrib + '\n'

  jobUpdate = '15 03 * * * root ' + strUpdate + '\n'
  #jobUpdate2 = '@monthly truncate -s 0 /usr/local/bin/adhan.log 2>&1' + '\n' # rpiAdhanClockJob
  fs.write(jobStrFajr+jobStrZohr+jobStrMaghrib+jobUpdate)
  fs.close()
  return

def addSuraTime (strZohr, strMaghrib, strZohrTime, strMaghribTime):
  fs = open('/etc/cron.d/cronSura', 'w')
  timeArr = strZohrTime.split(':')
  hour = timeArr[0]
  min = timeArr[1]
  jobStrZohr = min + ' ' + hour + ' * * * ' + ' root sh /usr/local/bin/playZohr.sh ' + '#' + strZohr + '\n'
  timeArr = strMaghribTime.split(':')
  hour = timeArr[0]
  min = timeArr[1]
  jobStrMaghrib = min + ' ' + hour + ' * * * ' + ' root sh /usr/local/bin/playMaghrib.sh ' + '#' + strMaghrib + '\n'
  fs.write(jobStrZohr+jobStrMaghrib)
  fs.close()
  return


def addUpdateCronJob (objCronTab, strCommand):
  job = objCronTab.new(command=strCommand)
  job.minute.on(15)
  job.hour.on(3)
  job.set_comment(strJobComment)
  print(job)
  return

def addClearLogsCronJob (objCronTab, strCommand):
  job = objCronTab.new(command=strCommand)
  job.day.on(1)
  job.minute.on(0)
  job.hour.on(0)
  job.set_comment(strJobComment)
  print(job)
  return
#---------------------------------
#---------------------------------
#HELPER FUNCTIONS END

#Parse arguments
parser = parseArgs()
args = parser.parse_args()
#Merge args with saved values if any
lat, lng, method, fajr_azaan_vol, azaan_vol = mergeArgs(args)
print(lat, lng, method, fajr_azaan_vol, azaan_vol)
#Complain if any mandatory value is missing
if not lat or not lng or not method:
    parser.print_usage()
    sys.exit(1)

#Set calculation method, utcOffset and dst here
#By default system timezone will be used
#--------------------
PT.setMethod(method)
utcOffset = -(time.timezone/3600)
isDst = time.localtime().tm_isdst

now = datetime.datetime.now()
#strPlayFajrAzaanMP3Command = '/usr/local/bin/playAzaan.sh'
#strPlayAzaanMP3Command = '/usr/local/bin/playAzaan.sh'
strUpdateCommand = '/usr/local/bin/updateAzaanTimers.py' #>> /usr/local/bin/adhan.log 2>&1'
#strClearLogsCommand = 'truncate -s 0 /usr/local/bin/adhan.log 2>&1'
#strJobComment = 'rpiAdhanClockJob'

# Remove existing jobs created by this script
#system_cron.remove_all(comment=strJobComment)

# Calculate prayer times
times = PT.getTimes((now.year,now.month,now.day), (lat, lng), utcOffset, isDst) 

print(times['fajr'])
print(times['dhuhr'])
print(times['maghrib'])

beforeZohr = datetime.datetime.strptime(times['dhuhr'], "%H:%M")
beforeZohrTime = beforeZohr - timedelta(minutes = 13)  # Calculate 13  minutes earlier
print(beforeZohrTime.strftime("%H:%M"))

beforeMaghrib = datetime.datetime.strptime(times['maghrib'], "%H:%M")
beforeMaghribTime = beforeMaghrib - timedelta(minutes = 13)  # Calculate 13  minutes earlier
print(beforeMaghribTime.strftime("%H:%M"))
maghrib = beforeMaghribTime.strftime("%H:%M")
zohr =beforeZohrTime.strftime("%H:%M")
print(zohr)

# Add times to cron for before Zohr and Maghrib
addSuraTime ('dhuhr', 'maghrib', zohr, maghrib)

# Add times to cron
addAzaanTime('fajr', 'dhuhr', 'maghrib', times['fajr'], times['dhuhr'], times['maghrib'],strUpdateCommand)

# Run this script again overnight
print(strUpdateCommand)
#addUpdateCronJob(system_cron, strUpdateCommand)

# Clear the logs every month
#addClearLogsCronJob(system_cron,strClearLogsCommand)

#system_cron.write_to_user(user='shahidj')
print('Script execution finished at: ' + str(now))

